[
	{
		"id": "1",
		"title": "JavaScript30：第一天筆記",
		"datetime": "2017.09.15",
		"tags": ["JavaScript", "前端"],
		"img": "/image/01.png",
		"text": "<h2 class=\"primary\">實現目標</h2>\n<p>\n\t寫出鍵盤打擊樂。當敲擊鍵盤由A至L的位置時，頁面上的按鈕會變亮，且會發出聲音。\n</p>\n<h2 class=\"primary\">詳細步驟：</h2>\n<blockquote>\n\t<ol>\n\t\t<li>1.  聆聽鍵盤按下去的事件</li>\n\t\t<li>2.  判斷按下去的按鍵，並對相應的div和audio做處理</li>\n\t\t<li>3.  鍵盤放開後，要回復原狀</li>\n\t</ol>\n</blockquote>\n\n<h3>",
		"html": "<h2 class=\"primary\">實現目標</h2>\n<p>\n\t寫出鍵盤打擊樂。當敲擊鍵盤由A至L的位置時，頁面上的按鈕會變亮，且會發出聲音。\n</p>\n<h2 class=\"primary\">詳細步驟：</h2>\n<blockquote>\n\t<ol>\n\t\t<li>1.  聆聽鍵盤按下去的事件</li>\n\t\t<li>2.  判斷按下去的按鍵，並對相應的div和audio做處理</li>\n\t\t<li>3.  鍵盤放開後，要回復原狀</li>\n\t</ol>\n</blockquote>\n\n<h3>\n\t1.  聆聽鍵盤按下去(keydown)的事件\n</h3>\n<ul class=\"circle\">\n\t<li>提示： <span class=\"highLight\">HTML5 Event</span> </li>\n</ul>\n<p class=\"small\">\n\t當鍵盤按下時，執行 <span class='highLight'>function playSound()</span> ，並將event裡的 <span class=\"highLight\">keyCode</span> (會記錄按下鍵的碼)\n</p>\n<pre><code class=\"js\">window.addEventListener(\"keydown\", function(e){\n\tplaySound(e.keyCode);\n})</code></pre>\n\n<h3>\n\t2.  判斷按下去的按鍵，並對相應的div和audio做處理\n</h3>\n<ul class=\"circle\">\n\t<li>提示：透過 <span class='highLight'>querySelector()</span> 去選擇 <span class='highLight'>data-key</span> 的屬性 </li>\n</ul>\n<p class=\"small\">\n\t<span class='highLight'>function playSound()</span> ：先選取到相對應 key 的 div 和 audio <br>\n\tcss選擇規則中：屬性是用 [ ] 來選取，例如：div[data-key=\"1\"] <br>\n\t如果沒有對應的 audio ，則回傳，不繼續執行。 <br>\n\t將選到的 div 的 class 加上 playing <br>\n\t並播放audio，為了讓每次按下去都同重頭播放音效，在播放設定 <span class='highLight'>currentTime = 0;</span>\n</p>\n<pre><code data-lang=\"js\">function playSound(keyCode){\n  const key = document.querySelector(`div[data-key=\"${keyCode}\"]`);\n  const audio = document.querySelector(`audio[data-key=\"${keyCode}\"]`);\n  if (!audio) return;\n\n  key.classList.add('playing');\n  audio.currentTime = 0;\n  audio.play();\n}</code></pre>\n\n<h3>\n\t3.  鍵盤放開後，要回復原狀\n</h3>\n<p class=\"small\">\n\t當transition動畫跑完時，從class中移除playing\n</p>\n<pre><code data-lang=\"js\">const keys = document.querySelectorAll('.key');\nfor(let key of keys){\n  key.addEventListener(\"transitionend\", removeClass);\n}\n\nfunction removeClass(){\n  this.classList.remove('playing');\n}</code></pre>"
	},
	{
		"id": "2",
		"title": "100 Days CSS: 第一天",
		"datetime": "2019.07.07",
		"tags": ["CSS", "前端", "100DaysCss"],
		"img": "/image/02.png",
		"text": "<h2 class=\"primary\">旋轉功能：transform: rotate(θ)</h2>\n        <p class=\"small\">\n          用<span class=\"highLight\">transform-origin</span>設定一個選轉的中心點，再透過<span class=\"highLight\">transform: rotate(θ)</span>設定旋轉的角度，即可達到旋轉的效果。<br/>\n          θ參數必須有單位，可以是 deg (角度 ° ) 、 rad (弧度) 、 grad (梯度)。\n        </p>",
		"html": "<img src=\"/image/02.png\" style=\"max-width: 450px\"/>\n        <h2 class=\"primary\">實現目標</h2>\n        <iframe height=\"500\" style=\"width: 100%\" scrolling=\"no\" title=\"100DaysCss #01\" src=\"//codepen.io/smile25896/embed/EBwNPY/?height=265&theme-id=0&default-tab=result\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\">\n          See the Pen <a href='https://codepen.io/smile25896/pen/EBwNPY/'>100DaysCss #01</a> by Cathy\n          (<a href='https://codepen.io/smile25896'>@smile25896</a>) on <a href='https://codepen.io'>CodePen</a>.\n        </iframe>\n        <h2 class=\"primary\">旋轉功能：transform: rotate(θ)</h2>\n        <p class=\"small\">\n          用<span class=\"highLight\">transform-origin</span>設定一個選轉的基準點，再透過<span class=\"highLight\">transform: rotate(θ)</span>設定旋轉的角度，即可達到旋轉的效果。<br/>\n          θ參數必須有單位，可以是 deg (角度 ° ) 、 rad (弧度) 、 grad (梯度)。\n        </p>\n        <img src=\"/image/02-2.png\" style=\"max-width: 550px\"/>\n        <pre><code class='css'>/* 旋轉基準點正方形左上方 */\n.a{\n  transform-origin: 0 0;\n  transform: rotate(20deg);\n}\n\n/* 旋轉基準點在正方形中心 */\n.b{\n  transform-origin: 50% 50%;\n  transform: rotate(20deg);\n}</code></pre>"
	},
	{
		"id": "3",
		"title": "100 Days CSS: 第二天：menu icon",
		"datetime": "2019.07.11",
		"tags": ["CSS", "前端", "100DaysCss"],
		"img": "/image/03.png",
		"text": "<h2 class=\"primary\">詳細步驟：</h2>\n<blockquote>\n  <ol>\n    <li>1.  畫出動畫開頭三條線的MENU</li>\n    <li>2.  透過transform製造位移，畫出動畫中三條線合併的MENU。</li>\n    <li>3.  透過transform製造旋轉效果，畫出動畫結尾X形狀的MENU。</li>\n    <li>4.  製作動畫，從三條線變成X。</li>\n  </ol>\n</blockquote>",
		"html": "\n<img src=\"/image/03.png\" style=\"max-width: 450px\"/>\n<h2 class=\"primary\">實現目標</h2>\n<h3>點menu icon後，橫線會旋轉成X。</h3>\n<iframe height=\"500\" style=\"width: 100%;\" scrolling=\"no\" title=\"100DaysCss #02 #plus\" src=\"//codepen.io/smile25896/embed/PrJzEr/?height=265&theme-id=0&default-tab=result\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/smile25896/pen/PrJzEr/'>100DaysCss #02 #plus</a> by Cathy\n  (<a href='https://codepen.io/smile25896'>@smile25896</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n\n<h2 class=\"primary\">詳細步驟：</h2>\n<blockquote>\n  <ol>\n    <li>1.  畫出動畫開頭三條線的MENU</li>\n    <li>2.  透過transform製造位移，畫出動畫中三條線合併的MENU。</li>\n    <li>3.  透過transform製造旋轉效果，畫出動畫結尾X形狀的MENU。</li>\n    <li>4.  製作動畫，從三條線變成X。</li>\n  </ol>\n</blockquote>\n\n<h2>\n  1. 畫出三條線的MENU\n</h2>\nDay2.html\n<pre class='small'><code class=\"html\">&lt;div class=&quot;frame&quot;&gt;\n&lt;div class=&quot;center&quot;&gt;\n  &lt;div class=&quot;line line1&quot;&gt;&lt;/div&gt;\n  &lt;div class=&quot;line line2&quot;&gt;&lt;/div&gt;\n  &lt;div class=&quot;line line3&quot;&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;</code></pre>\nDay2.scss\n<pre><code class=\"scss\">$menu-icon-line-height: 8px;\n$menu-icon-line-width: 80px;\n.line{\n  background: #fff;\n  width: $menu-icon-line-width;\n  height: $menu-icon-line-height;\n  border-radius: 3px;\n  box-shadow: 0 2px 10px 0 rgba(0,0,0,0.3);\n  margin: 15px 0;\n}</code></pre>\n\n<h2>\n  2.  畫出三條線合併的MENU。\n</h2>\n<p class='small'>\n  透過<span class=\"highLight\">transform: translate(x軸, y軸)</span>，將第一條和第三條線位移到第二條線的位置。\n</p>\n<div class='tip' name=\"transform: translate()\">\n  <h3 class=\"primary\">位移功能：transform: translate(x軸, y軸)</h3>\n  <img src='/image/03-2.png' style=\"max-width: 350px\"/>\n  <pre class=\"small2\"><code class='css'>a{ transform: translate(0, 100px); }\nb{ transform: translate(100px, 0); }</code></pre>\n</div>\n\nDay2.scss\n<pre><code class=\"scss\">.line1{\n  transform: translate(0, 23px);\n}\n.line2{\n  /* 第二條線不需要位移 */\n}\n.line3{\n  transform: translate(0, -23px);\n}</code></pre>\n\n<h2>\n3.  畫出X形狀的MENU。\n</h2>\n<p class='small'>\n透過<span class=\"highLight\">transform: rotate(θ)</span>，將第一條和第三條線旋轉成X的角度，第二條線則隱藏。\n</p>\nDay2.scss\n<pre><code class=\"scss\">.line1{\n  transform: translate(0, 23px) rotate(45deg);\n}\n.line2{\n  /* 第二條線消失 */\n  opacity: 0;\n}\n.line3{\n  transform: translate(0, -23px) rotate(135deg);\n}</code></pre>\n\n<h2>\n3.  將上述動作串成動畫。\n</h2>\n\n<h3>CSS動畫</h3>\n<p class=\"small\">\n  透過<span class=\"highLight\">keyframes</span>搭配<span class=\"highLight\">animation-</span>製作CSS動畫效果。\n</p>\n<div class='tip' name='keyframes'>\n  <pre class='small'><code class='css'>/* keyframes 範例 */\n@keyframes 動畫名稱{\n  關鍵影格{ css.... }\n  關鍵影格{ css.... }\n}</code></pre>\n  \n    <p class=\"small\">\n      <span class='bold'>關鍵影格：</span><br/>\n      1. 百分比數(%)<br/>\n      2. from和to ：相當於0%和100%\n    </p>\n    <pre class='small'><code class='css'>/* 背景顏色從白變成黃再變成紅 */\n@keyframes changeColor{\n  0%{ background: #fff; }\n  50%{ background: yellow; }\n  100%{ background: red; }\n}\n/* 背景顏色從白直接變成紅 */\n@keyframes changeColor2{\n  from{ background: #fff; }\n  to{ background: red; }\n}</code></pre>\n</div>\n\n\n<div class='tip' name='animation'>\n<p class=\"small\">\n  設定要套用什麼動畫，以及套用的細節。\n</p>\n<pre class='small'><code class='css'>/* animation範例 */\ndiv{\n  animation: 動畫名稱 動畫持續時間 動畫加速函式 動畫播放前後模式\n}</code></pre>\n<div>\n  <p class=\"small\">\n    <span class=\"bold\">動畫名稱</span><br/>\n    關鍵影格動畫的名稱\n  </p>\n  <p class=\"small\">\n    <span class=\"bold\">動畫持續時間</span><br/>\n    動畫播放的總時長，預設為0。(單位：秒(s)或毫秒(ms))\n  </p>\n  <p class=\"small\">\n    <span class=\"bold\">動畫加速函式</span><br/>\n    linear: 線性，沒有加速減速。<br/>\n    ease、ease-in、ease-out、ease-in-out: 漸入漸出的加速效果。<br/>\n    cubic-bezier(n,n,n,n): 貝茲曲線\n  </p>\n  <p class=\"small\">\n    <span class=\"bold\">動畫播放前後模式</span><br/>\n    none: 預設，動畫結束後返回原始狀態。<br/>\n    backwards: 動畫結束後停留在最後一個影格狀態。\n  </p>\n  <p class=\"small2\">\n    除了上述提到的，animation還有很多可以設定的內容，本篇只用到這幾個。之後可能會在出一篇文對animation做詳細介紹。\n  </p>\n</div>\n</div>\n\n<p class=\"small\">\n  將三條線分別製作關鍵影格動畫。<br/>\n  0%的關鍵影格：三條線平行<br/>\n  50%的關鍵影格：三條線合併<br/>\n  100%的關鍵影格：X型\n</p>\nDay2.scss\n<pre><code class='scss'>@keyframes animate-line-1 {\n  0% {\n    transform: translate(0, 0px);\n  }\n  50% {\n    transform: translate(0, 23px) rotate(0);\n  }\n  100% {\n    transform: translate(0, 23px) rotate(315deg);\n  }\n}\n\n@keyframes animate-line-2 {\n  0% {\n    transform: scale(1);\n    opacity: 1;\n  }\n  100% {\n    /* 除了調整透明度，還利用transform: scale(0)線條漸小的效果。 */\n    transform: scale(0);\n    opacity: 0;\n  }\n}\n\n@keyframes animate-line-3 {\n  0% {\n    transform: translate(0, 0px);\n  }\n  50% {\n    transform: translate(0, -23px) rotate(0);\n  }\n  100% {\n    transform: translate(0, -23px) rotate(225deg);\n  }\n}</code></pre>\n\n<p class=\"small\">\n  接著透過js設定<span class=\"highLight\">onclick</span>，點擊後幫線條(.line)套上class active，再點一下則拿掉class active。<br/>\n</p>\n<pre><code class='js'>document.querySelector('.center').addEventListener('click', toggleMenu)\nfunction toggleMenu(){\n  document.querySelectorAll('.line').forEach(item=>{\n    item.classList.toggle('active')\n  })\n}</code></pre>\n\n<p class=\"small\">\n  接著將class active套用由\"≡\"轉換到\"X\"的關鍵影格動畫。\n</p>\n<pre><code class='scss'>$cubic-bezier-in: cubic-bezier(0.30,1,0.70,1);\n$cubic-bezier-out: cubic-bezier(1,0.70,1,0.30);\n.line1.active{\n  animation: animate-line-1 .7s $cubic-bezier-in forwards;\n}\n.line2.active{\n  animation: animate-line-2 .7s $cubic-bezier-in forwards;\n}\n.line3{\n  animation: animate-line-3-out .7s ease-in-out;\n}\n</code></pre>\n\n<p class=\"small\">\n  用相同的方法製作倒過來的關鍵影格動畫，即可完成這次的題目！\n</p>\n"
	}
]